#pragma once 

#include "CommonHeaders.h"

namespace NN
{

	
//
//Activation Function 
//

const std::string activationFunctionsSrc = ""
"void ActivationIdentity(__global float* v, __global float* y, float param0, float param1)"
"{"
"	int base = get_global_id(0);"
"	float x = v[base];"
"	y[base] = x;"
"}"
"void DeltaActivationIdentity(__global float* v, __global float* y, float param0, float param1)"
"{"
"	int base = get_global_id(0);"
"	float x = v[base];"
"	y[base] = 1;"
"}"
""
"void ActivationBinaryStep(__global float* v, __global float* y, float param0, float param1)"
"{"
"	int base = get_global_id(0);"
"	float x = v[base];"
"	y[base] = x < 0 ? 0 : 1;"
"}"
"void DeltaActivationBinaryStep(__global float* v, __global float* y, float param0, float param1)"
"{"
"	int base = get_global_id(0);"
"	float x = v[base];"
"	y[base] = 0;"
"}"
""
"void ActivationLogistic(__global float* v, __global float* y, float param0, float param1)"
"{"
"	int base = get_global_id(0);"
"	float x = v[base];"
"	y[base] = 1.0 /(1.0 + exp(-x));"
"}"
"void DeltaActivationLogistic(__global float* v, __global float* y, float param0, float param1)"
"{"
"	int base = get_global_id(0);"
"	float x = v[base];"
"	float f = 1.0 /(1.0 + exp(-x));"
"	y[base] = f * (1.0 - f);"
"}"
""
"void ActivationTanH(__global float* v, __global float* y, float param0, float param1)"
"{"
"	int base = get_global_id(0);"
"	float x = v[base];"
"	y[base] = tanh(x);"
"}"
"void DeltaActivationTanH(__global float* v, __global float* y, float param0, float param1)"
"{"
"	int base = get_global_id(0);"
"	float x = v[base];"
"	float f = tanh(x);"
"	y[base] = 1.0 - f * f;"
"}"
""
"void ActivationArcTan(__global float* v, __global float* y, float param0, float param1)"
"{"
"	int base = get_global_id(0);"
"	float x = v[base];"
"	y[base] = atan(x);"
"}"
"void DeltaActivationArcTan(__global float* v, __global float* y, float param0, float param1)"
"{"
"	int base = get_global_id(0);"
"	float x = v[base];"
"	y[base] = 1.0/(x * x + 1);"
"}"
""
"void ActivationSoftSign(__global float* v, __global float* y, float param0, float param1)"
"{"
"	int base = get_global_id(0);"
"	float x = v[base];"
"	y[base] = x / (1.0 + fabs(x));"
"}"
"void DeltaActivationSoftSign(__global float* v, __global float* y, float param0, float param1)"
"{"
"	int base = get_global_id(0);"
"	float x = v[base];"
"	float f = 1.0 + fabs(x);"
"	y[base] = 1.0 / (f * f);"
"}"
""
"void ActivationReLU(__global float* v, __global float* y, float param0, float param1)"
"{"
"	int base = get_global_id(0);"
"	float x = v[base];"
"	y[base] = x < 0 ? 0 : x;"
"}"
"void DeltaActivationReLU(__global float* v, __global float* y, float param0, float param1)"
"{"
"	int base = get_global_id(0);"
"	float x = v[base];"
"	y[base] = x < 0 ? 0 : 1;"
"}"
""
"void ActivationLeakyReLU(__global float* v, __global float* y, float param0, float param1)"
"{"
"	int base = get_global_id(0);"
"	float x = v[base];"
"	y[base] = x < 0 ? 0.01 * x : x;"
"}"
"void DeltaActivationLeakyReLU(__global float* v, __global float* y, float param0, float param1)"
"{"
"	int base = get_global_id(0);"
"	float x = v[base];"
"	y[base] = x < 0 ? 0.01 : 1;"
"}"
""
"void ActivationLeakyPReLU(__global float* v, __global float* y, float param0, float param1)"
"{"
"	int base = get_global_id(0);"
"	float x = v[base];"
"	y[base] = x < 0 ? param0 * x : x;"
"}"
"void DeltaActivationLeakyPReLU(__global float* v, __global float* y, float param0, float param1)"
"{"
"	int base = get_global_id(0);"
"	float x = v[base];"
"	y[base] = x < 0 ? param0 : 1;"
"}"
""
"void ActivationELU(__global float* v, __global float* y, float param0, float param1)"
"{"
"	int base = get_global_id(0);"
"	float x = v[base];"
"	y[base] = x < 0 ? param0 * (exp(x) - 1.0) : x;"
"}"
"void DeltaActivationELU(__global float* v, __global float* y, float param0, float param1)"
"{"
"	int base = get_global_id(0);"
"	float x = v[base];"
"	float f = param0 * (exp(x) - 1.0);"
"	y[base] = x < 0 ? f + param0 : 1;"
"}"
""
"void ActivationSoftPlus(__global float* v, __global float* y, float param0, float param1)"
"{"
"	int base = get_global_id(0);"
"	float x = v[base];"
"	y[base] = log(1.0 + exp(x));"
"}"
"void DeltaActivationSoftPlus(__global float* v, __global float* y, float param0, float param1)"
"{"
"	int base = get_global_id(0);"
"	float x = v[base];"
"	y[base] = 1.0 / (1.0 + exp(-x));"
"}"
""
"void ActivationGaussian(__global float* v, __global float* y, float param0, float param1)"
"{"
"	int base = get_global_id(0);"
"	float x = v[base];"
"	y[base] = exp(-x * x);"
"}"
"void DeltaActivationGaussian(__global float* v, __global float* y, float param0, float param1)"
"{"
"	int base = get_global_id(0);"
"	float x = v[base];"
"	y[base] = -2 * x * exp(-x * x);"
"}"
;

}